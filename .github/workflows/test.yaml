name: Reusable test

on:
  workflow_call:
    inputs:
      php-version:
        type: string
        required: false
        default: "8.1"
      php-extensions:
        type: string
        required: false
        default: "intl, json, zip"
      database-init:
        type: string
        required: false
        default: "schema"
      database-load-fixtures:
        type: boolean
        required: false
        default: false
    secrets:
      packagist-token:
        required: true
      node-token:
        required: false

jobs:
  test:
    name: "test"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@verbose"
        with:
          coverage: "pcov"
          php-version: ${{ inputs.php-version }}
          extensions: ${{ inputs.php-extensions }}
        env:
          COMPOSER_TOKEN: ${{ secrets.packagist-token }}

      - name: "Install symfony-cli"
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.deb.sh' | sudo -E bash
          sudo apt install symfony-cli -y

      - name: Get composer cache directory
        id: composerCache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composerCache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Configure NPM
        run: |
          if [ -n "${{ secrets.node-token}}" ]; then
            echo '//npm.pkg.github.com/:_authToken=${{ secrets.node-token }}' > .npmrc
            echo '@ub-unibe-ch:registry=https://npm.pkg.github.com/' >> .npmrc
            echo 'always-auth=true' >> .npmrc
          fi 

      - name: "Install latest dependencies"
        run: |
          composer install --ansi --no-interaction --no-progress --prefer-dist
          yarn --no-interaction --no-progress
      
      - name: "Build assets"
        run: yarn encore production --color

      - name: "Start services"
        run: docker compose up -d --wait
          
      - name: "Updating schema"
        if: ${{ inputs.database-init == 'schema' }}
        run: |
          symfony console doctrine:schema:update --force --env test --ansi --no-interaction
    
      - name: "Run database migration"
        if: ${{ inputs.database-init == 'migration' }} 
        run: |
          symfony console doctrine:migrations:migrate --env test -n --ansi --no-interaction

      - name: "Load fixtures"
        if: ${{ inputs.database-load-fixtures == true }} 
        run: |
          symfony console doctrine:fixtures:load --force --env test --ansi --no-interaction

      - name: "Run PHPUnit"
        run: symfony composer test

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "./var/junit.xml"
   
      - name: Coverage Report
        uses: danhunsaker/clover-reporter-action@v0.2.17-clover
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          clover-file: ./var/clover.xml

      - name: "Cleanup"
        if: ${{ always() }}
        run: docker-compose down
